/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.auditevents.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = GetAuditEventParams.Builder.class)
public final class GetAuditEventParams {
    private final String auditEventId;

    private final Map<String, Object> additionalProperties;

    private GetAuditEventParams(String auditEventId, Map<String, Object> additionalProperties) {
        this.auditEventId = auditEventId;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("auditEventId")
    public String getAuditEventId() {
        return auditEventId;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof GetAuditEventParams && equalTo((GetAuditEventParams) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(GetAuditEventParams other) {
        return auditEventId.equals(other.auditEventId);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.auditEventId);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static AuditEventIdStage builder() {
        return new Builder();
    }

    public interface AuditEventIdStage {
        _FinalStage auditEventId(String auditEventId);

        Builder from(GetAuditEventParams other);
    }

    public interface _FinalStage {
        GetAuditEventParams build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements AuditEventIdStage, _FinalStage {
        private String auditEventId;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(GetAuditEventParams other) {
            auditEventId(other.getAuditEventId());
            return this;
        }

        @Override
        @JsonSetter("auditEventId")
        public _FinalStage auditEventId(String auditEventId) {
            this.auditEventId = auditEventId;
            return this;
        }

        @Override
        public GetAuditEventParams build() {
            return new GetAuditEventParams(auditEventId, additionalProperties);
        }
    }
}
