/**
 * This file was auto-generated by Fern from our API Definition.
 */
package com.courier.api.resources.profiles.types;

import com.courier.api.core.ObjectMappers;
import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

@JsonInclude(JsonInclude.Include.NON_EMPTY)
@JsonDeserialize(builder = SendToMsTeamsChannel.Builder.class)
public final class SendToMsTeamsChannel {
    private final String conversationId;

    private final String tenantId;

    private final String serviceUrl;

    private final Map<String, Object> additionalProperties;

    private SendToMsTeamsChannel(
            String conversationId, String tenantId, String serviceUrl, Map<String, Object> additionalProperties) {
        this.conversationId = conversationId;
        this.tenantId = tenantId;
        this.serviceUrl = serviceUrl;
        this.additionalProperties = additionalProperties;
    }

    @JsonProperty("conversation_id")
    public String getConversationId() {
        return conversationId;
    }

    @JsonProperty("tenant_id")
    public String getTenantId() {
        return tenantId;
    }

    @JsonProperty("service_url")
    public String getServiceUrl() {
        return serviceUrl;
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;
        return other instanceof SendToMsTeamsChannel && equalTo((SendToMsTeamsChannel) other);
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    private boolean equalTo(SendToMsTeamsChannel other) {
        return conversationId.equals(other.conversationId)
                && tenantId.equals(other.tenantId)
                && serviceUrl.equals(other.serviceUrl);
    }

    @Override
    public int hashCode() {
        return Objects.hash(this.conversationId, this.tenantId, this.serviceUrl);
    }

    @Override
    public String toString() {
        return ObjectMappers.stringify(this);
    }

    public static ConversationIdStage builder() {
        return new Builder();
    }

    public interface ConversationIdStage {
        TenantIdStage conversationId(String conversationId);

        Builder from(SendToMsTeamsChannel other);
    }

    public interface TenantIdStage {
        ServiceUrlStage tenantId(String tenantId);
    }

    public interface ServiceUrlStage {
        _FinalStage serviceUrl(String serviceUrl);
    }

    public interface _FinalStage {
        SendToMsTeamsChannel build();
    }

    @JsonIgnoreProperties(ignoreUnknown = true)
    public static final class Builder implements ConversationIdStage, TenantIdStage, ServiceUrlStage, _FinalStage {
        private String conversationId;

        private String tenantId;

        private String serviceUrl;

        @JsonAnySetter
        private Map<String, Object> additionalProperties = new HashMap<>();

        private Builder() {}

        @Override
        public Builder from(SendToMsTeamsChannel other) {
            conversationId(other.getConversationId());
            tenantId(other.getTenantId());
            serviceUrl(other.getServiceUrl());
            return this;
        }

        @Override
        @JsonSetter("conversation_id")
        public TenantIdStage conversationId(String conversationId) {
            this.conversationId = conversationId;
            return this;
        }

        @Override
        @JsonSetter("tenant_id")
        public ServiceUrlStage tenantId(String tenantId) {
            this.tenantId = tenantId;
            return this;
        }

        @Override
        @JsonSetter("service_url")
        public _FinalStage serviceUrl(String serviceUrl) {
            this.serviceUrl = serviceUrl;
            return this;
        }

        @Override
        public SendToMsTeamsChannel build() {
            return new SendToMsTeamsChannel(conversationId, tenantId, serviceUrl, additionalProperties);
        }
    }
}
